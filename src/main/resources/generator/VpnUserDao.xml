<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dataanalysis.mapper.VpnUserDao">
  <resultMap id="BaseResultMap" type="com.example.dataanalysis.basic.VpnUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="group_path" jdbcType="VARCHAR" property="groupPath" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="ca" jdbcType="VARCHAR" property="ca" />
    <result column="certificate" jdbcType="VARCHAR" property="certificate" />
    <result column="last_login" jdbcType="VARCHAR" property="lastLogin" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, group_path, `password`, phone, ip_address, `desc`, ca, certificate, 
    last_login
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vpn_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from vpn_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.dataanalysis.basic.VpnUser" useGeneratedKeys="true">
    insert into vpn_user (id,username, group_path, `password`,
      phone, ip_address, `desc`, 
      ca, certificate, last_login
      )
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{groupPath,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{ca,jdbcType=VARCHAR}, #{certificate,jdbcType=VARCHAR}, #{lastLogin,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.dataanalysis.basic.VpnUser" useGeneratedKeys="true">
    insert into vpn_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
        id,
      <if test="username != null">
        username,
      </if>
      <if test="groupPath != null">
        group_path,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="ca != null">
        ca,
      </if>
      <if test="certificate != null">
        certificate,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        #{id,jdbcType=VARCHAR},
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupPath != null">
        #{groupPath,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="ca != null">
        #{ca,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null">
        #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.dataanalysis.basic.VpnUser">
    update vpn_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="groupPath != null">
        group_path = #{groupPath,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="ca != null">
        ca = #{ca,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null">
        certificate = #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.dataanalysis.basic.VpnUser">
    update vpn_user
    set username = #{username,jdbcType=VARCHAR},
      group_path = #{groupPath,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      ca = #{ca,jdbcType=VARCHAR},
      certificate = #{certificate,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>